//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.1.0
//     from Packages/com.sark.rltk_unity/Runtime/SampleScripts/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Default"",
            ""id"": ""0102dbf5-6879-45c3-bfa2-a91859414c8e"",
            ""actions"": [
                {
                    ""name"": ""MiddleMouse"",
                    ""type"": ""Button"",
                    ""id"": ""5abff5ba-b505-4772-b4b2-10aebb317ce5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""RightMouse"",
                    ""type"": ""Button"",
                    ""id"": ""6018f984-4f08-4eff-b9f4-0c998a98c4ea"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""LMBDrag"",
                    ""type"": ""Button"",
                    ""id"": ""e1c47db8-6582-4fba-949e-214ef33aa7fd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=0.05)""
                },
                {
                    ""name"": ""TogglePathfinding"",
                    ""type"": ""Button"",
                    ""id"": ""6970e37a-e244-4130-954d-d48f692b06a6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=0.05)""
                },
                {
                    ""name"": ""ResizeMap"",
                    ""type"": ""Value"",
                    ""id"": ""b0256bed-5a07-4208-8c1f-f34fe1d6e05f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""FindPath"",
                    ""type"": ""Button"",
                    ""id"": ""3521da9c-d5f2-4c86-a35b-6540de5680f5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""AddNoise"",
                    ""type"": ""Button"",
                    ""id"": ""6632bb68-b546-4b3c-930f-80a5436bc3a1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""ToggleControls"",
                    ""type"": ""Button"",
                    ""id"": ""189b6eb0-7b8e-4ff8-b9f5-a6b6f41598b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Clear"",
                    ""type"": ""Button"",
                    ""id"": ""0fe068d4-abdb-49b5-8a36-a33fe124f3fe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Quit"",
                    ""type"": ""Button"",
                    ""id"": ""f7d297c7-6945-45b5-b374-4af00a6d9467"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""975357c5-599c-426b-a030-8252055580ec"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""MiddleMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""09027c7d-10e2-4317-91d2-1273854e0049"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""RightMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""43c5ff83-cd68-4f4a-b30e-5849068a5379"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""LMBDrag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1abc5f4d-fa7e-4e8b-9349-b1d478cb0736"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TogglePathfinding"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""31c35802-b385-4607-a98f-2d85a5ac8a73"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResizeMap"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""af419c4e-0f0e-4178-b447-d1ea96b30a08"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResizeMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d8386b47-10ae-4d2f-9ab5-f05d2face08a"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResizeMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9d2d423c-d557-470a-8f24-1ddc26b78a34"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResizeMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""89c065f5-1ce2-4481-b361-1532e597d53d"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResizeMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c90344ee-35fa-4cca-b74b-08a25ecb18be"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FindPath"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7434e69a-6c67-4ba6-81ca-b219fb00b199"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AddNoise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f03dcd4f-0ebb-474f-9cc2-3313fe2760ff"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleControls"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9174edb-3cb7-4b1e-bbe0-2f273beb7c56"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Clear"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c0be3ae-5cd4-4da5-8e25-b09e035e7f8d"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Quit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Default"",
            ""bindingGroup"": ""Default"",
            ""devices"": []
        }
    ]
}");
        // Default
        m_Default = asset.FindActionMap("Default", throwIfNotFound: true);
        m_Default_MiddleMouse = m_Default.FindAction("MiddleMouse", throwIfNotFound: true);
        m_Default_RightMouse = m_Default.FindAction("RightMouse", throwIfNotFound: true);
        m_Default_LMBDrag = m_Default.FindAction("LMBDrag", throwIfNotFound: true);
        m_Default_TogglePathfinding = m_Default.FindAction("TogglePathfinding", throwIfNotFound: true);
        m_Default_ResizeMap = m_Default.FindAction("ResizeMap", throwIfNotFound: true);
        m_Default_FindPath = m_Default.FindAction("FindPath", throwIfNotFound: true);
        m_Default_AddNoise = m_Default.FindAction("AddNoise", throwIfNotFound: true);
        m_Default_ToggleControls = m_Default.FindAction("ToggleControls", throwIfNotFound: true);
        m_Default_Clear = m_Default.FindAction("Clear", throwIfNotFound: true);
        m_Default_Quit = m_Default.FindAction("Quit", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Default
    private readonly InputActionMap m_Default;
    private IDefaultActions m_DefaultActionsCallbackInterface;
    private readonly InputAction m_Default_MiddleMouse;
    private readonly InputAction m_Default_RightMouse;
    private readonly InputAction m_Default_LMBDrag;
    private readonly InputAction m_Default_TogglePathfinding;
    private readonly InputAction m_Default_ResizeMap;
    private readonly InputAction m_Default_FindPath;
    private readonly InputAction m_Default_AddNoise;
    private readonly InputAction m_Default_ToggleControls;
    private readonly InputAction m_Default_Clear;
    private readonly InputAction m_Default_Quit;
    public struct DefaultActions
    {
        private @Controls m_Wrapper;
        public DefaultActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @MiddleMouse => m_Wrapper.m_Default_MiddleMouse;
        public InputAction @RightMouse => m_Wrapper.m_Default_RightMouse;
        public InputAction @LMBDrag => m_Wrapper.m_Default_LMBDrag;
        public InputAction @TogglePathfinding => m_Wrapper.m_Default_TogglePathfinding;
        public InputAction @ResizeMap => m_Wrapper.m_Default_ResizeMap;
        public InputAction @FindPath => m_Wrapper.m_Default_FindPath;
        public InputAction @AddNoise => m_Wrapper.m_Default_AddNoise;
        public InputAction @ToggleControls => m_Wrapper.m_Default_ToggleControls;
        public InputAction @Clear => m_Wrapper.m_Default_Clear;
        public InputAction @Quit => m_Wrapper.m_Default_Quit;
        public InputActionMap Get() { return m_Wrapper.m_Default; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DefaultActions set) { return set.Get(); }
        public void SetCallbacks(IDefaultActions instance)
        {
            if (m_Wrapper.m_DefaultActionsCallbackInterface != null)
            {
                @MiddleMouse.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnMiddleMouse;
                @MiddleMouse.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnMiddleMouse;
                @MiddleMouse.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnMiddleMouse;
                @RightMouse.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnRightMouse;
                @RightMouse.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnRightMouse;
                @RightMouse.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnRightMouse;
                @LMBDrag.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnLMBDrag;
                @LMBDrag.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnLMBDrag;
                @LMBDrag.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnLMBDrag;
                @TogglePathfinding.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnTogglePathfinding;
                @TogglePathfinding.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnTogglePathfinding;
                @TogglePathfinding.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnTogglePathfinding;
                @ResizeMap.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnResizeMap;
                @ResizeMap.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnResizeMap;
                @ResizeMap.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnResizeMap;
                @FindPath.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnFindPath;
                @FindPath.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnFindPath;
                @FindPath.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnFindPath;
                @AddNoise.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnAddNoise;
                @AddNoise.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnAddNoise;
                @AddNoise.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnAddNoise;
                @ToggleControls.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnToggleControls;
                @ToggleControls.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnToggleControls;
                @ToggleControls.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnToggleControls;
                @Clear.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnClear;
                @Clear.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnClear;
                @Clear.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnClear;
                @Quit.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnQuit;
                @Quit.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnQuit;
                @Quit.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnQuit;
            }
            m_Wrapper.m_DefaultActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MiddleMouse.started += instance.OnMiddleMouse;
                @MiddleMouse.performed += instance.OnMiddleMouse;
                @MiddleMouse.canceled += instance.OnMiddleMouse;
                @RightMouse.started += instance.OnRightMouse;
                @RightMouse.performed += instance.OnRightMouse;
                @RightMouse.canceled += instance.OnRightMouse;
                @LMBDrag.started += instance.OnLMBDrag;
                @LMBDrag.performed += instance.OnLMBDrag;
                @LMBDrag.canceled += instance.OnLMBDrag;
                @TogglePathfinding.started += instance.OnTogglePathfinding;
                @TogglePathfinding.performed += instance.OnTogglePathfinding;
                @TogglePathfinding.canceled += instance.OnTogglePathfinding;
                @ResizeMap.started += instance.OnResizeMap;
                @ResizeMap.performed += instance.OnResizeMap;
                @ResizeMap.canceled += instance.OnResizeMap;
                @FindPath.started += instance.OnFindPath;
                @FindPath.performed += instance.OnFindPath;
                @FindPath.canceled += instance.OnFindPath;
                @AddNoise.started += instance.OnAddNoise;
                @AddNoise.performed += instance.OnAddNoise;
                @AddNoise.canceled += instance.OnAddNoise;
                @ToggleControls.started += instance.OnToggleControls;
                @ToggleControls.performed += instance.OnToggleControls;
                @ToggleControls.canceled += instance.OnToggleControls;
                @Clear.started += instance.OnClear;
                @Clear.performed += instance.OnClear;
                @Clear.canceled += instance.OnClear;
                @Quit.started += instance.OnQuit;
                @Quit.performed += instance.OnQuit;
                @Quit.canceled += instance.OnQuit;
            }
        }
    }
    public DefaultActions @Default => new DefaultActions(this);
    private int m_DefaultSchemeIndex = -1;
    public InputControlScheme DefaultScheme
    {
        get
        {
            if (m_DefaultSchemeIndex == -1) m_DefaultSchemeIndex = asset.FindControlSchemeIndex("Default");
            return asset.controlSchemes[m_DefaultSchemeIndex];
        }
    }
    public interface IDefaultActions
    {
        void OnMiddleMouse(InputAction.CallbackContext context);
        void OnRightMouse(InputAction.CallbackContext context);
        void OnLMBDrag(InputAction.CallbackContext context);
        void OnTogglePathfinding(InputAction.CallbackContext context);
        void OnResizeMap(InputAction.CallbackContext context);
        void OnFindPath(InputAction.CallbackContext context);
        void OnAddNoise(InputAction.CallbackContext context);
        void OnToggleControls(InputAction.CallbackContext context);
        void OnClear(InputAction.CallbackContext context);
        void OnQuit(InputAction.CallbackContext context);
    }
}
